{"version":3,"file":"draw.js","sources":["../lib/draw.ts"],"sourcesContent":["/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n\n'use strict';\n\ntype PointType = {\n  x:number,\n  y:number\n}\n/** Holds the xy coordinates on the Canvas and the matrix coordinates of the cell */\nexport class Point\n{\n  x: number;\n  y: number;\n  constructor();\n  constructor(point: PointType);\n  constructor(x:number, y:number);\n  constructor(arg?: PointType|number, y?: number) {\n    switch (typeof arg) {\n      case 'number':\n        this.x = arg\n        this.y = y === undefined ? 0 : y;\n        break;\n      case 'object':\n        this.x = arg.x ?? 0;\n        this.y = arg.y ?? 0;\n        break;\n      default:\n        this.x = 0;\n        this.y = 0;\n        break;\n    }\n  }\n}\n\n/** Hold a rectangular area on the Canvas */\nexport class Rect\n{\n  topLeft: Point;\n  bottomRight: Point;\n  constructor(topLeft: PointType, bottomRight: PointType);\n  constructor(topLeft: PointType, width:number, height:number);\n  constructor(topLeft: PointType, arg2: PointType|number, height?:number) {\n    this.topLeft = topLeft;\n    switch (typeof arg2) {\n      case 'object':\n        this.bottomRight = arg2;\n        break;\n      default:\n        this.bottomRight = new Point(topLeft.x+arg2,topLeft.y+(height?height:0));\n        break;\n    }\n  }\n  get width() {\n    return this.bottomRight.x - this.topLeft.x;\n  } \n  get height() {\n    return this.bottomRight.y - this.topLeft.y;\n  } \n  get left() {\n    return this.topLeft.x;\n  } \n  get top() {\n    return this.topLeft.y;\n  }\n  get right() {\n    return this.bottomRight.x\n  } \n  get bottom() {\n    return this.bottomRight.y\n  }\n  /** Combines and returns two Rects */\n  union(rhs:Rect):Rect {\n    let topLeft = new Point(Math.min(this.left, rhs.left), Math.min(this.top, rhs.top))\n    let bottomRight = new Point(Math.max(this.right, rhs.right), Math.max(this.bottom, rhs.bottom))\n    return new Rect(topLeft, bottomRight)\n  }\n  /** Returns true if it contains the specified Rect */\n  isIncluded(rhs:Rect):boolean {\n    return this.left <= rhs.left\n    && this.top <= rhs.top\n    && rhs.right <= this.right\n    && rhs.bottom <= this.bottom;\n  }\n  static clone(from:Rect):Rect {\n    return new Rect(new Point(from.left, from.right), from.width, from.height)\n  }\n}\n\n/**\n * Layout information for one cell grid to be drawn\n */\nexport class Cell\n{\n  /** Coordinates(column,row) in the table of the current cell */\n  coordinate: Point;\n  /**\n  * The rectangular area in which the cells are drawn on the Canvas.\n  * Borders are drawn on the bottom and right lines.\n  */\n  clipRect: Rect;\n  constructor(coordinate:Point, clipRect:Rect) {\n    this.coordinate = coordinate\n    this.clipRect = clipRect\n  }\n  get width() {\n    return this.clipRect.width\n  } \n  get height() {\n    return this.clipRect.height\n  } \n  get left() {\n    return this.clipRect.left\n  } \n  get top() {\n    return this.clipRect.top\n  } \n  get colmun() {\n    return this.coordinate.x\n  } \n  get row() {\n    return this.coordinate.y\n  } \n}\n\n/**\n *  Wrap canvas context2d\n */\nexport class Draw\n{\n  position:Point = new Point();\n  ctx:CanvasRenderingContext2D;\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx;\n  }\n  fillRect(rect:Rect, fillStyle?:string) {\n    if (fillStyle) {\n      this.ctx.fillStyle = fillStyle\n    }\n    this.ctx.fillRect(rect.left, rect.top, rect.width, rect.height)\n  }\n\n  strokeRect(rect:Rect, strokeStyle?:string) {\n    if (strokeStyle) {\n      this.ctx.strokeStyle = strokeStyle\n    }\n    this.ctx.strokeRect(rect.left, rect.top, rect.width, rect.height);\n  }\n  drawText(text:string) {\n    this.ctx.fillText(text, this.position.x, this.position.y)\n  }\n\n  measureText(text:string):TextMetrics {\n    return this.ctx.measureText(text)\n  }\n  fillText(text:string, leftTop:PointType, maxwidth?:number) {\n    this.ctx.fillText(text, leftTop.x, leftTop.y, maxwidth)\n  }\n}\n\n"],"names":[],"mappings":"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"}